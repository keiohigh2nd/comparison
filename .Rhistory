library(edgeR)
count <- read.table("input/input_2015_6_8_12",sep = "\t", header = T, row.names = 1) 
count <- as.matrix(count)
group <- factor(c("A", "B"))
d <- DGEList(counts = count, group = group)
d <- calcNormFactors(d)
d <- estimateCommonDisp(d)
d <- estimateTagwiseDisp(d)
result <- exactTest(d)
result <- exactTest(d)
dim(count)
count <- read.table("http://bi.biopapyrus.net/data/count2g.txt", 
                    sep = "\t", header = T, row.names = 1)
dim(count)
count <- as.matrix(count)
dim(count)
count <- read.table("input/input_2015_6_8_12",sep = "\t", header = T, row.names = 1) 
dim(count)
count <- as.matrix(count)
design <- model.matrix(~ group)
d <- DGEList(counts = count, group = group)
d <- calcNormFactors(d)
d <- estimateGLMCommonDisp(d, design)
d <- estimateGLMTrendedDisp(d, design)
d <- estimateGLMTagwiseDisp(d, design)
fit <- glmFit(d, design)
d <- estimateGLMCommonDisp(d, method = "deviance", robust = T, subset = NULL)
result <- exactTest(d)
topTags(result)
q()
library(ggplot2)
library(reshape2)
library(ggthemes)
source('ggthemes')
library("devtools")
q()
library(ggplot2)
> library(reshape2)
> library(ggthemes)
library(ggplot2)
library(reshape2)
library(ggthemes)]
library(ggthemes)
data <- read.table("http://stat.biopapyrus.net/data/arraydata.txt", header = TRUE)
data <- read.table("visualization/viz_2015_6_10_3", header = TRUE)
data <- read.table("visualization/viz_2015_6_10_3", header = TRUE, row.names = 1)
data <- as.matrix(data)
head(data)
data2=melt(data,id.var="PValue")
head(data2)
 (p<-ggplot(data2,aes(as.factor(Var1),as.factor(Var2)))+geom_tile(aes(fill=value))+scale_fill_gradient(low="white",high="red"))
png("plot1.png", width = 400, height = 400)
p + labs(x = "",y = "") + scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",axis.ticks = element_blank(), axis.text.x = element_text(size = 7, angle = 280, hjust = 0, colour = "grey50"))
plot(p + labs(x = "",y = "") + scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",axis.ticks = element_blank(), axis.text.x = element_text(size = 7, angle = 280, hjust = 0, colour = "grey50")))
dev.off() 
data <- read.table("visualization/viz_2015_6_10_3", header = TRUE, row.names = 1, nrows = 100)
data <- as.matrix(data)
data2=melt(data,id.var="PValue")
 (p<-ggplot(data2,aes(as.factor(Var1),as.factor(Var2)))+geom_tile(aes(fill=value))+scale_fill_gradient(low="white",high="red"))
png("plot1.png", width = 1000, height = 1000)
plot(p + labs(x = "",y = "") + scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0)) +  theme(legend.position = "none",axis.ticks = element_blank(), axis.text.x = element_text(size = 7, angle = 280, hjust = 0, colour = "grey50")))
dev.off() 
png("plot2.png", width = 1000, height = 1000)
heatmap(
+   data,                     # 行列型データ
+   main = "Heat colors",     # グラフタイトル
+   Rowv = TRUE,              # 列にクラスタ図を描く
+   Colv = TRUE,                # 行にクラスタ図を描かない
+   distfun = dist,           # distance calculation
+   hclustfun = hclust,       # clustering method
+   col = heat.colors(256),    # 色彩の指定
+ )
heatmap(data, main="Heat Colors", Rowv = TRUE, Colv = TRUE, distfun = dist, hclustfun = hclust, col = heat.colors(256))
plot( heatmap(data, main="Heat Colors", Rowv = TRUE, Colv = TRUE, distfun = dist, hclustfun = hclust, col = heat.colors(256)))
heatmap(data, main="Heat Colors", Rowv = TRUE, Colv = TRUE, distfun = dist, hclustfun = hclust, col = heat.colors(256))
png("plot2.png", width = 1000, height = 1000)
heatmap(data, main="Heat Colors", Rowv = TRUE, Colv = TRUE, distfun = dist, hclustfun = hclust, col = heat.colors(256))
dev.off() 
history()
heatmap(data2, main="Heat Colors", Rowv = TRUE, Colv = TRUE, distfun = dist, hclustfun = hclust, col = heat.colors(256))
heatmap(data, main="Heat Colors", Rowv = TRUE, Colv = TRUE, distfun = dist, hclustfun = hclust, col = heat.colors(256))
q()
source('DESeq2')
source("http://bioconductor.org/biocLite.R")
biocLite("DESeq2")
x <- load(url("http://www-huber.embl.de/users/klaus/geneCounts.RData"))
dim(x)
head(assay(x))
library(DESeq2)
head(assay(x))
q()
count <- read.table('input/input_2015_6_15_39', sep = "\t", header = T, row.names = 1)
okamoto <- as.matrix(count)
okamoto
dim(okamoto)
okamoto[0][1]
okamoto[1][1]
okamoto[1][2]
okamoto[1][3]
okamoto[1][4]
okamoto[2][4]
okamoto[6][4]
okamoto[7][4]
okamoto[1][4]
okamoto[1][3]
okamoto[1][2]
okamoto[1][1]
okamoto[1][2]
okamoto[1][3]
okamoto[1][1]
okamoto[2][1]
okamoto[3][1]
okamoto[4][1]
okamoto[5][1]
okamoto[6][1]
okamoto[7][1]
okamoto[100][1]
okamoto[101][1]
dim(okamoto)
